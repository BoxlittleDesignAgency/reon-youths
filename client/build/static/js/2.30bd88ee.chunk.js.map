{"version":3,"sources":["pages/components/contact/Contact.js","assets/images/offices.png","assets/images/arrow-left.svg","assets/images/arrow-right.svg"],"names":["slides","tagLine","slideImg","Contact","useState","numSlides","useRef","length","console","log","proxy","document","createElement","gsap","set","x","transform","slideAnimation","to","_gsTransform","useEffect","animateSlides","wrap","min","max","r","value","wrapPartial","timer","delayedCall","xPercent","ease","paused","repeat","modifiers","direction","restart","kill","className","style","paddingTop","paddingBottom","display","id","ref","el","type","onClick","src","leftArrow","alt","rightArrow","position","marginTop","alignItems","htmlFor","name","placeholder","required","rows","cols","ContactImg","module","exports"],"mappings":"wNASMA,EAAS,CACb,CACEC,QAAQ,mBACRC,SAAS,4CAEX,CACED,QAAS,iBACTC,SAAU,qCAEZ,CACED,QAAS,mBACTC,SAAU,4CAwMCC,UApMC,WAAO,IAAD,EACYC,oBAAS,GADrB,mBAQhBC,GARgB,UAMHC,iBAAO,MAERN,EAAOO,QACvBC,QAAQC,IAAI,mBAAoBJ,GAEhC,IAAIK,EAAQC,SAASC,cAAc,OACnCC,IAAKC,IAAIJ,EAAO,CAAEK,EAAG,QAErB,IACIC,EADAC,EAAiBJ,IAAKK,GAAG,GAAI,GAAK,IAEtCF,EAAYN,EAAMS,aAIlBC,qBAAU,WACRC,GAAe,KACd,CAACR,MAEJ,IAkBIS,EAlBgB,SAACC,EAAKC,GACxB,IAAIC,EAAID,EAAMD,EACd,OAAO,SAAUG,GAEf,OAASD,GADDC,EAAQH,GACEE,GAAMA,EAAKF,GActBI,EAAa,IAAuB,KAAjBtB,EAAY,IAEtCuB,EAAQf,IAAKgB,YAzCA,KA6BA,eA2CXR,GA7BUR,IAAKK,GAAGlB,EAAQ,EAAG,CACjC8B,SAAU,KAA0B,IAAnBzB,EAAUE,OAC3BwB,KAAM,kBACNC,QAAQ,EACRC,QAAS,EACTC,UAAW,CACTJ,SAAUR,KAuBQ,SAACa,GACrBP,EAAMQ,SAAQ,GACdnB,EAAeoB,OACf7B,QAAQC,IAAIO,KASd,OACE,kBAAC,WAAD,KACE,yBACEsB,UAAU,mCACVC,MAAO,CAAEC,WAAY,OAAQC,cAAe,OAAQC,QAAS,UAE7D,6BAASC,GAAG,mBAAmBL,UAAU,iBACvC,yBAAKA,UAAU,+BACb,yBAAKM,IAAK,SAACC,GAAD,OAAsBA,GAAKP,UAAU,gBAC7C,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,gBACb,oDAGJ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,gBACb,mDAIN,yBAAKA,UAAU,YACb,4BAAQQ,KAAK,SAASR,UAAU,cAAcS,QApDxC,WAChB1B,EAAc,KAoDF,yBAAK2B,IAAKC,IAAWC,IAAI,gBAE3B,4BAAQJ,KAAK,SAASR,UAAU,cAAcS,QAnDxC,WAChB1B,GAAe,KAmDH,yBAAK2B,IAAKG,IAAYD,IAAI,mBAKlC,6BACEZ,UAAU,aACVC,MAAO,CAAEa,SAAU,WAAYV,QAAS,QAASW,UAAW,SAE5D,yBAAKf,UAAU,uBAAuBC,MAAO,IAC3C,yBAAKD,UAAU,2BACb,yBAAKA,UAAU,aAAf,cAEA,yBACEU,IAAI,sGACJE,IAAI,WAGR,yBACEZ,UAAU,0BACVC,MAAO,CAAEe,WAAY,aAErB,yBAAKhB,UAAU,wBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,sBACb,2BAAOiB,QAAQ,aAAf,aACA,2BACEZ,GAAG,YACHG,KAAK,OACLU,KAAK,WACLC,YAAY,YACZC,UAAQ,KAGZ,yBAAKpB,UAAU,sBACb,2BAAOiB,QAAQ,cAAf,iBACA,2BACEZ,GAAG,aACHG,KAAK,OACLU,KAAK,YACLC,YAAY,YACZC,UAAQ,KAGZ,yBAAKpB,UAAU,4CACb,2BAAOiB,QAAQ,WAAf,8CAGA,8BACEI,KAAK,KACLC,KAAK,KACLjB,GAAG,UACHa,KAAK,aAGT,yBAAKlB,UAAU,sBACb,4BAAQA,UAAU,iBAAiBQ,KAAK,UAAxC,cAUZ,6BAASR,UAAU,oBACjB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,mBACb,yBACEA,UAAU,iBACVU,IAAKa,IACLX,IAAI,yB,0CCjNtBY,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B","file":"static/js/2.30bd88ee.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useRef, useState } from 'react';\nimport gsap from 'gsap';\n\nimport './Contact.scss';\n\nimport ContactImg from '../../../assets/images/offices.png';\nimport leftArrow from '../../../assets/images/arrow-left.svg';\nimport rightArrow from '../../../assets/images/arrow-right.svg';\n\nconst slides = [\n  {\n    tagLine: `Only God Matters`,\n    slideImg: `../../../assets/images/photo-1-evan.jpeg`\n  },\n  {\n    tagLine: 'Contact word 2',\n    slideImg: '../../../assets/images/austin.jpg'\n  },\n  {\n    tagLine: 'Contact word 333',\n    slideImg: '../../../assets/images/sanfrancisco.jpg'\n  }\n];\n\nconst Contact = () => {\n  const [autoplay, setAutoplay] = useState(true);\n\n  let slideDelay = 1.5;\n  let slideDuration = 0.3;\n\n  let slidesList = useRef(null);\n\n  let numSlides = slides.length;\n  console.log('number of slides', numSlides);\n\n  let proxy = document.createElement('div');\n  gsap.set(proxy, { x: '+=0' });\n\n  let slideAnimation = gsap.to({}, 0.1, {});\n  let transform;\n  transform = proxy._gsTransform;\n  let slideWidth = 0;\n  let wrapWidth = 0;\n\n  useEffect(() => {\n    animateSlides(-1)\n  }, [gsap]);\n\n  const wrapPartial = (min, max) => {\n    let r = max - min;\n    return function (value) {\n      var v = value - min;\n      return ((r + (v % r)) % r) + min;\n    };\n  };\n\n  const autoPlay = () => {};\n\n  let updateProgress = () => {\n    animation.progress(transform.x / wrapWidth);\n  };\n\n  let snapX = (xdir) => {\n    return Math.round(xdir / slideWidth) * slideWidth;\n  };\n\n  let wrap = wrapPartial(-100, (numSlides - 1) * 100);\n\n  let timer = gsap.delayedCall(slideDelay, autoPlay);\n\n  let animation = gsap.to(slides, 1, {\n    xPercent: '+=' + numSlides.length * 100,\n    ease: 'linear.easeNone',\n    paused: true,\n    repeat: -1,\n    modifiers: {\n      xPercent: wrap\n    }\n  });\n\n  const prevSlide = () => {\n    animateSlides(1);\n  };\n\n  const nextSlide = () => {\n    animateSlides(-1);\n  };\n\n  const renderSlides = () => {\n    slides.map((item, index) => (\n      <div className=\"slide\" key={index}>\n        <img className=\"hero-image\" src={item.slideImg} />\n        <div className=\"contact-word\">\n          <span>{item.tagLine}</span>\n        </div>\n      </div>\n    ));\n  };\n\n  const animateSlides = (direction) => {\n    timer.restart(true);\n    slideAnimation.kill();\n    console.log(transform);\n    //let xDirection = snapX(transform.x + direction * slideWidth);\n\n    // slideAnimation = gsap.to(proxy, slideDuration, {\n    //   x: xDirection,\n    //   onUpdate: updateProgress\n    // });\n  };\n\n  return (\n    <Fragment>\n      <div\n        className=\"container contact-container page\"\n        style={{ paddingTop: '9rem', paddingBottom: '6rem', display: 'block' }}\n      >\n        <section id=\"contact-masthead\" className=\"contact-inner\">\n          <div className=\"slides-container full-width\">\n            <div ref={(el) => (slidesList = el)} className=\"slides-inner\">\n              <div className=\"slide hero-image1\">\n                <div className=\"contact-word\">\n                  <span>Only God Matters</span>\n                </div>\n              </div>\n              <div className=\"slide hero-image2\">\n                <div className=\"contact-word\">\n                  <span>Contact word 2</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"controls\">\n              <button type=\"button\" className=\"arrows prev\" onClick={prevSlide}>\n                <img src={leftArrow} alt=\"left arrow\" />\n              </button>\n              <button type=\"button\" className=\"arrows next\" onClick={nextSlide}>\n                <img src={rightArrow} alt=\"left arrow\" />\n              </button>\n            </div>\n          </div>\n        </section>\n        <section\n          className=\"full-width\"\n          style={{ position: 'relative', display: 'block', marginTop: '50px' }}\n        >\n          <div className=\"container flex-based\" style={{}}>\n            <div className=\"cnt-column cnt-half-one\">\n              <div className=\"cnt-block\">Contact us</div>\n\n              <img\n                src=\"//cdn.shopify.com/s/files/1/1211/5920/t/45/assets/about_section_4_image_2.jpg?v=5122455654466978303\"\n                alt=\"Hobes\"\n              ></img>\n            </div>\n            <div\n              className=\"cnt-column cnt-half-two\"\n              style={{ alignItems: 'flex-end' }}\n            >\n              <div className=\"contact-form-section\">\n                <div className=\"contact-form-inner\">\n                  <div className=\"contact-form-field\">\n                    <label htmlFor=\"from-name\">Full name</label>\n                    <input\n                      id=\"from-name\"\n                      type=\"text\"\n                      name=\"fromName\"\n                      placeholder=\"Type here\"\n                      required\n                    />\n                  </div>\n                  <div className=\"contact-form-field\">\n                    <label htmlFor=\"from-email\">Email address</label>\n                    <input\n                      id=\"from-email\"\n                      type=\"text\"\n                      name=\"fromEmail\"\n                      placeholder=\"Type here\"\n                      required\n                    />\n                  </div>\n                  <div className=\"contact-form-field contact-form-textarea\">\n                    <label htmlFor=\"message\">\n                      The more detail you can give us the better\n                    </label>\n                    <textarea\n                      rows=\"10\"\n                      cols=\"40\"\n                      id=\"message\"\n                      name=\"message\"\n                    ></textarea>\n                  </div>\n                  <div className=\"contact-form-field\">\n                    <button className=\"cta-btn orange\" type=\"submit\">\n                      Send\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"contact-followup\">\n          <div className=\"row\">\n            <div className=\"cf-visual full-width\">\n              <div className=\"cf-visual-inner\">\n                <img\n                  className=\"img-responsive\"\n                  src={ContactImg}\n                  alt=\"contact page\"\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","module.exports = __webpack_public_path__ + \"static/media/offices.7281658b.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow-left.4cd3b2b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-right.116a70ad.svg\";"],"sourceRoot":""}